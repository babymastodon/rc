# NOTE: to use this, rename this file to default.conf and put in /etc/keyd/

# Mac-Like Configuration Example
#
# Uses "Alt" button to the left of spacebar as "Cmd" key
#
# Note:
#   This 'trick' generally requires that the press+release of the Meta
#   key will do nothing. On my system, I had to disable the "overlay-key"
#   in mutter to make it inert:
#     - `gsettings set org.gnome.mutter overlay-key ''`

[ids]
*

[main]

# Create a new "Cmd" button, with various Mac OS-like features below
leftalt = layer(altmap_left)
rightalt = layer(altmap_right)
bluetooth = f16
config = sysrq
f23 = leftalt
f14 = leftalt

# Swap meta/alt
capslock = overload(capslock, esc)

[capslock:A]
h = left
j = down
k = up
l = right
c = S-M-c
v = S-M-v
d = f6

[capslock+shift]
h = S-left
j = S-down
k = S-up
l = S-right
c = S-M-c
v = S-M-v

# altmap_left modifier layer; inherits from 'Ctrl' modifier layer
#
# The main part! Using this layer, we can remap our new "Cmd" key to
# do almost everything our muscle memory might need...
[altmap_left:C]

# Meta-Space: Open the Launcher (a feature of gnome-shell)
# keybinding: ? how did we arrive at M-/ ?
space = M-/

# Switch directly to an open tab (e.g. Firefox, VS code)
1 = A-1
2 = A-2
3 = A-3
4 = A-4
5 = A-5
6 = A-6
7 = A-7
8 = A-8
9 = A-9

# Copy
c = C-insert
# Paste
v = S-insert
# Cut
x = S-delete

left = A-left
right = A-right

[ = C-[
] = C-]

# As soon as tab is pressed (but not yet released), we switch to the
# "app_switch_state" overlay where we can handle Meta-Backtick differently.
# Also, send a 'M-tab' key tap before entering app_switch_sate.
tab = swapm(app_switch_state, M-tab)

# Meta-Backtick: Switch to next window in the application group
# - A-f6 is the default binding for 'cycle-group' in gnome
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings cycle-group`
` = A-f6

[altmap_left+shift]
1 = C-S-1
2 = C-S-2
3 = C-S-3
4 = C-S-4
5 = C-S-5
6 = C-S-6
7 = C-S-7
8 = C-S-8
9 = C-S-9
0 = C-S-0

[ = C-S-tab
] = C-tab

[capslock+altmap_left]
h = A-left
l = A-right
j = A-down
k = A-up

[altmap_right:C]

[capslock+altmap_left+altmap_right]
h = C-A-left
l = C-A-right
j = C-A-down
k = C-A-up

[altmap_left+altmap_right]
# Letters
a = C-A-a
b = C-A-b
c = C-A-c
d = C-A-d
e = C-A-e
f = C-A-f
g = C-A-g
h = C-A-h
i = C-A-i
j = C-A-j
k = C-A-k
l = C-A-l
m = C-A-m
n = C-A-n
o = C-A-o
p = C-A-p
q = C-A-q
r = C-A-r
s = C-A-s
t = C-A-t
u = C-A-u
v = C-A-v
w = C-A-w
x = C-A-x
y = C-A-y
z = C-A-z

# Numbers
1 = C-A-1
2 = C-A-2
3 = C-A-3
4 = C-A-4
5 = C-A-5
6 = C-A-6
7 = C-A-7
8 = C-A-8
9 = C-A-9
0 = C-A-0

# Other
delete  = C-A-delete
f1 = C-A-f1
f2 = C-A-f2
f3 = C-A-f3
f4 = C-A-f4
f5 = C-A-f5
f6 = C-A-f6

# app_switch_state modifier layer; inherits from 'Meta' modifier layer
[app_switch_state:M]

# Meta-Tab: Switch to next application
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings switch-applications`
tab = M-tab
right = M-tab

# Meta-Backtick: Switch to previous application
# - keybinding: `gsettings get org.gnome.desktop.wm.keybindings switch-applications-backward`
` = M-S-tab
left = M-S-tab
