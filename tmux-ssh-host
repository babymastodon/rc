#!/usr/bin/env bash
# tmux-ssh-host — print "󰱠 <hostname>" for an SSH pane, cached 60s.
# usage: tmux-ssh-host [pane_pid] [cache_key]

set -euo pipefail

key=${2:-default}
cache="/tmp/tmux-badge-ssh${key//\//-}"
now=${EPOCHSECONDS:-$(date +%s)}

# ---------- FAST PATH (no forks) ----------
if { exec {fd}<"$cache"; } 2>/dev/null; then
  mapfile -t L <&"$fd"; exec {fd}<&-
  ts="${L[0]:-}"; line="${L[1]:-}"
  if [[ -n "$ts" && -n "$line" ]] && (( now - ts < 60)); then
    printf '%s\n' "$line"
    exit 0
  fi
fi

pane_pid="${1:-}"
[[ -n "$pane_pid" ]] || exit 0

# ---------- helpers ----------
parse_host_from_argv_array() {
  local -a a=( "$@" )
  local host="" i

  for ((i=1;i<${#a[@]};i++)); do
    case "${a[i]}" in
      --) ((i++)); host="${a[i]}"; break ;;
      -\#) ((i++)); host="${a[i]}"; break ;;  # mosh-client display name
      -*) continue ;;                         # skip all flags
      '|') continue ;;                        # skip mosh pipe separator
      *) host="${a[i]}"; break ;;
    esac
  done


  [[ -n "$host" ]] && {
    host="${host##*@}"
    host="${host#[}"
    host="${host%]}"
    host="${host%%[:|]*}"
    echo "$host"
  } || echo ""
}


print_and_cache() {
  local out="$1"
  [[ -z "$out" ]] && exit 0
  tmp="${cache}.tmp.$$"
  { printf '%s\n' "$now"; printf '%s\n' "$out"; } >"$tmp"
  mv "$tmp" "$cache"
  printf '%s\n' "$out"
}

# ---------- SLOW PATH ----------
# 1) Foreground process group (TPGID) of the pane's process
tpgid="$(ps -o tpgid= -p "$pane_pid" 2>/dev/null | tr -d '[:space:]' || true)"
[[ -n "$tpgid" ]] || exit 0

host=""
while IFS= read -r cmd; do
  # shellcheck disable=SC2206
  av=( $cmd )
  [[ "${av[0]:-}" =~ (^|/)(ssh|ssh\.exe|mosh-client)$ ]] || continue
  h="$(parse_host_from_argv_array "${av[@]}")"
  if [[ -n "$h" ]]; then host="$h"; break; fi
done < <(ps -o command= -p "$tpgid" -ww 2>/dev/null || true)

[[ -n "$host" ]] || exit 0
print_and_cache "󰱠 $host"

